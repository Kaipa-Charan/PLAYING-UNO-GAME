# -*- coding: utf-8 -*-
"""Playing UNO Game.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1quECpm6Bhnj7JOh2NBZSGyWZz-FmsIiU
"""

import random

# Set up the deck of cards
colors = ["Red", "Yellow", "Green", "Blue"]
numbers = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "Skip", "Reverse", "Draw Two"]
wild_cards = ["Wild", "Wild Draw Four"]
deck = []
for color in colors:
    for number in numbers:
        card = color + " " + number
        deck.append(card)
    for wild_card in wild_cards:
        card = wild_card + " " + color
        deck.append(card)

# Shuffle the deck
random.shuffle(deck)

# Set up the players
num_players = int(input("How many players? "))
players = []
for i in range(num_players):
    name = input(f"Player {i+1}, what is your name? ")
    players.append({"name": name, "hand": []})

# Deal the cards
for i in range(7):
    for player in players:
        player["hand"].append(deck.pop())

# Set up the discard pile
discard_pile = []
discard_pile.append(deck.pop())

# Set up the game loop
direction = 1  # 1 for clockwise, -1 for counterclockwise
current_player = 0
playing = True
while playing:
    # Print the current state of the game
    print("\n\n")
    print("=" * 20)
    print(f"Top card: {discard_pile[-1]}")
    print(f"Direction: {'Clockwise' if direction == 1 else 'Counterclockwise'}")
    for player in players:
        print(f"{player['name']}: {len(player['hand'])} cards")
    print("=" * 20)

    # Get the current player's move
    player = players[current_player]
    print(f"\n{player['name']}'s turn")
    print(f"Your hand: {', '.join(player['hand'])}")
    valid_moves = [card for card in player['hand'] if card.split()[0] == discard_pile[-1].split()[0] or card.split()[1] == discard_pile[-1].split()[1] or "Wild" in card]
    if not valid_moves:
        print("No valid moves. Drawing a card.")
        player['hand'].append(deck.pop())
    else:
        while True:
            move = input("What card would you like to play? ")
            if move not in valid_moves:
                print("Invalid move. Please try again.")
            else:
                player['hand'].remove(move)
                discard_pile.append(move)
                if "Wild" in move:
                    new_color = input("What color would you like to change to? ")
                    discard_pile[-1] = move.split()[0] + " " + new_color
                if "Draw Two" in move:
                    next_player = (current_player + direction) % num_players
                    players[next_player]['hand'].append(deck.pop())
                    players[next_player]['hand'].append(deck.pop())
                if "Reverse" in move:
                    direction = -direction
                if "Skip" in move:
                    current_player = (current_player + direction) % num_players
                break

    # Check if the current player has won
    if not player['hand']:
        print(f"\n{player['name']} has won!")
        playing = False

    # Update the current player
    current_player = (current_player + direction) % num_players